For cleaning world files from Raven 2.x to Raven 3.0:


wld:

perl -pi -w -e 's/Z 1/T 1/g;' *.wld
perl -pi -w -e 's/Z 2/T 2/g;' *.wld
perl -pi -w -e 's/Z 3/T 3/g;' *.wld
perl -pi -w -e 's/Z 4/T 4/g;' *.wld
perl -pi -w -e 's/Z 5/T 5/g;' *.wld
perl -pi -w -e 's/Z 6/T 6/g;' *.wld
perl -pi -w -e 's/Z 7/T 7/g;' *.wld
perl -pi -w -e 's/Z 8/T 8/g;' *.wld
perl -pi -w -e 's/Z 9/T 9/g;' *.wld

zon:

Make the following file named 'fix.py' in the /lib/world/zon directory:

---------------------

#!/usr/bin/env python
import sys

# with is like your try .. finally block in this case

file = open(sys.argv[1], 'r')
zonNum = (sys.argv[1].split("."))[0]

try:
  # read a list of lines into data
  data = file.readlines()
finally:
  file.close()

# now change the 2nd line, note that you have to add a newline
data[2] = zonNum + '00 ' + data[2]

# and write everything back
file = open(zonNum + '.zon', 'w')
try:
  file.writelines( data )

finally:
  file.close()

---------------------

Then make some script that runs the following for all ZON files in the directory:

python fix.py 0.zon
python fix.py 1.zon
...


mob:

Make the following file named 'fix.py' in the /lib/world/zon directory:

--------------------------

#!/usr/bin/env python
import sys

file = open(sys.argv[1], 'r')
mobNum = (sys.argv[1].split("."))[0]

try:
  # read a list of lines into data
  data = file.readlines()
finally:
  file.close()

tildeCount = 0

for i in range(len(data)):
  if "~" in data[i]:
    tildeCount += 1

  if tildeCount == 5:
    data[i + 1] = data[i + 1].rstrip() + " E\r\n"
    data[i + 4] = data[i + 4] + "E\r\n"
    tildeCount = 0

# and write everything back
file = open(mobNum + '.mob.test', 'w')
try:
  file.writelines( data )

finally:
  file.close()

--------------------------


Then make some script that runs the following for all ZON files in the directory:

python fix.py 0.mob
python fix.py 1.mob

Also, you must do the following to convert mob triggers:

perl -pi -w -e 's/Z 1/T 1/g;' *.mob
perl -pi -w -e 's/Z 2/T 2/g;' *.mob
perl -pi -w -e 's/Z 3/T 3/g;' *.mob
perl -pi -w -e 's/Z 4/T 4/g;' *.mob
perl -pi -w -e 's/Z 5/T 5/g;' *.mob
perl -pi -w -e 's/Z 6/T 6/g;' *.mob
perl -pi -w -e 's/Z 7/T 7/g;' *.mob
perl -pi -w -e 's/Z 8/T 8/g;' *.mob
perl -pi -w -e 's/Z 9/T 9/g;' *.mob

...

obj:

fix.sh script:

#!/usr/bin/env python
import sys

file = open(sys.argv[1], 'r')
objNum = (sys.argv[1].split("."))[0]

try:
  # read a list of lines into data
  data = file.readlines()
finally:
  file.close()

tildeCount = 0
permLine = -1
timer = "0"
permString = "0 0 0 0\r\n"

for i in range(len(data)):
  if len(data[i]) > 0 and "#" == data[i][0] and permLine != -1 or "$~" in data[i] and permLine != -1:
    data[permLine + 2] = data[permLine + 2].rstrip() + " 0 " + str(timer) + "\r\n"
    data[permLine] = data[permLine].rstrip() + " " + permString
    #reset temp values
    permString = "0 0 0 0\r\n"
    timer = "0"
    tildeCount = 0

  if "~" in data[i]:
    tildeCount += 1

    if tildeCount == 4:
      permLine = i + 1

  if data[i] == "B\n":
    data[i] = ""
    permString = data[i + 1]
    data[i + 1] = ""

  if tildeCount >= 4 and len(data[i]) > 0 and data[i][0] == "D" and data[i][1:].rstrip().isdigit():
    timer = data[i][1:].rstrip()
    data[i] = ""

# and write everything back
file = open(objNum + '.obj', 'w')
try:
  file.writelines( data )

finally:
  file.close()




perl -pi -w -e 's/Z 1/T 1/g;' *.obj
perl -pi -w -e 's/Z 2/T 2/g;' *.obj
perl -pi -w -e 's/Z 3/T 3/g;' *.obj
perl -pi -w -e 's/Z 4/T 4/g;' *.obj
perl -pi -w -e 's/Z 5/T 5/g;' *.obj
perl -pi -w -e 's/Z 6/T 6/g;' *.obj
perl -pi -w -e 's/Z 7/T 7/g;' *.obj
perl -pi -w -e 's/Z 8/T 8/g;' *.obj
perl -pi -w -e 's/Z 9/T 9/g;' *.obj
